{{- if .Values.database.create }}
apiVersion: batch/v1
kind: Job
{{ $image := .Values.image }}
metadata:
  name: {{ template "datacube.fullname" . }}-db-creation
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: "{{ .Values.database.database }}-db"
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      containers:
      - name: create-db
        image: "{{ $image.repository }}:{{ $image.tag }}"
        args: [ {{- range .Values.database.creation.dockerArgs }} {{ . | quote }}, {{ end -}} ]
        imagePullPolicy: {{ $image.pullPolicy }}
        env:
        - name: DB_HOSTNAME
          value: {{ .Values.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.database.port | quote }}
        - name: DB_DATABASE
          value: {{ .Values.database.database | quote }}
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "datacube.secretName" . }}
              key: postgres-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "datacube.secretName" . }}
              key: postgres-password
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.adminSecret }}
              key: postgres-username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.adminSecret }}
              key: postgres-password
      restartPolicy: Never
  backoffLimit: 2
{{- end }}
