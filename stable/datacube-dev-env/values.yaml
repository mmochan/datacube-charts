# Default values for datacube-wms.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
environment: dev
image:
  registry: docker.io
  repository: opendatacube/k8s_dev_env
  tag: "latest"
  pullPolicy: Always

datacube:
  configPath: /opt/odc/datacube.conf
database:
  create: true
  database: testdb
  ref_database: ows # Reference db for psql dump to our database
  host: db-dev-eks-datacube-default.cxhoeczwhtar.ap-southeast-2.rds.amazonaws.com
  port: 5432
  adminSecret: dev-eks-datacube
  existingSecret: dev-eks-datacube

clusterInfo:
  envName: dev

resources:
  limits:
    cpu: "300m"
    memory: 1024Mi

# Make chunks of 1GB psql dump file and restore the dump file to new database
dockerArgs: [ "/bin/bash", "-c", "PGPASSWORD=$ADMIN_PASSWORD psql -h $DB_HOSTNAME -p 5432 -U $ADMIN_USERNAME -d $DB_DATABASE -c 'pg_dump $REF_DATABASE | split -b 1G - pgdump_file | cat pgdump_file* | psql $DB_DATABASE'" ]

annotations:
  iam.amazonaws.com/role: dev-eks-datacube-wms
additionalEnvironmentVars: { }

service:
  type: NodePort
  port: 80

setup:
  dockerArgs: [ "/bin/bash", "-c", "PGPASSWORD=$ADMIN_PASSWORD psql -h $DB_HOSTNAME -p 5432 -U $ADMIN_USERNAME -d $DB_DATABASE -c 'CREATE EXTENSION IF NOT EXISTS postgis'" ]
  image:
    registry: docker.io
    repository: postgres
    tag: latest
    pullPolicy: IfNotPresent

containerPort: 8080 # Internal port on which pod is running

ingress:
  ## Enable Ingress.
  ##
  enabled: false
  host:

## Define a TCP liveness probe
## For a liveness probe, giving up means the pod will be restarted.
livenessProbe:
  exec:
    command:
      - "ls"
  initialDelaySeconds: 10
  periodSeconds: 10

## Define readiness probe
## For a readiness probe, giving up means not routing traffic to the pod, but the pod is not restarted.
readinessProbe:
  exec:
    command:
      - "ls"
  initialDelaySeconds: 5
  periodSeconds: 10

additionalSettings: {}
